module.exports.config = {
  name: "antiout",
  eventType: ["log:unsubscribe"],
  version: "0.0.1",
  credits: "ЁЭРВЁЭРШЁЭРБЁЭРДЁЭРС тШвя╕П_ЁЦгШ -ЁЭРБЁЭРОЁЭРУ тЪая╕П ЁЭС╗ЁЭСмЁЭСиЁЭС┤_ тШвя╕П",
  description: "Listen events"
};

module.exports.run = async ({ event, api, Threads, Users }) => {
  let data = (await Threads.getData(event.threadID)).data || {};
  if (!data.antiout) return;

  if (event.logMessageData.leftParticipantFbId == api.getCurrentUserID()) return;

  const userID = event.logMessageData.leftParticipantFbId;
  const name = global.data.userName.get(userID) || await Users.getNameUser(userID);

  const type = (event.author == userID) ? "self-separation" : "forced-removal";

  if (type === "self-separation") {
    api.addUserToGroup(userID, event.threadID, (error) => {
      if (error) {
        api.sendMessage(
          `рж╕рж░рж┐ ржмрж╕, ${name} ржХрзЗ ржЖржмрж╛рж░ ржПржб ржХрж░рждрзЗ ржкрж╛рж░рж▓рж╛ржо ржирж╛ред 
рж╕ржорзНржнржмржд ржЙржирж┐ ржмржЯржХрзЗ ржмрзНрж▓ржХ ржХрж░рзЗржЫрзЗ ржЕржержмрж╛ рждрж╛рж░ ржкрзНрж░рж╛ржЗржнрзЗрж╕рж┐ рж╕рзЗржЯрж┐ржВрж╕рзЗрж░ ржХрж╛рж░ржгрзЗ ржПржб ржХрж░рж╛ ржпрж╛ржпрж╝ ржирж╛ред 
\nтФАтФАтФАтФАтФАтФАъпнтФАтГЭтАМтАМЁЭРВЁЭР▓ЁЭРЫЁЭРЮЁЭРл ЁЭРБЁЭРиЁЭРн ЁЭРСЁЭРвЁЭРмЁЭРотФАтФАтФАтФАтФА`,
          event.threadID
        );
      } else {
        api.sendMessage(
          `рж╢рзЛржи, ${name}, ржПржЗ ржЧрзНрж░рзБржк рж╣ржЗрж▓рзЛ ржЧрзНржпрж╛ржВ!
ржПржЦрж╛ржи ржерзЗржХрзЗ ржпрж╛ржЗрждрзЗ рж╣рж▓рзЗ ржПржбржорж┐ржирзЗрж░ ржкрж╛рж░ржорж┐рж╢ржи рж▓рж╛ржЧрзЗ!
рждрзБржЗ ржкрж╛рж░ржорж┐рж╢ржи ржЫрж╛ржбрж╝рж╛ рж▓рж┐ржн ржирж┐ржЫрзЛрж╕ тАУ рждрзЛржХрзЗ ржЖржмрж╛рж░ ржорж╛ржлрж┐ржпрж╝рж╛ рж╕рзНржЯрж╛ржЗрж▓рзЗ ржПржб ржжрж┐рж▓рж╛ржоред
\nтФАтФАтФАтФАтФАтФАъпнтФАтГЭтАМтАМЁЭРВЁЭР▓ЁЭРЫЁЭРЮЁЭРл ЁЭРБЁЭРиЁЭРн ЁЭРСЁЭРвЁЭРмЁЭРотФАтФАтФАтФАтФА`,
          event.threadID
        );
      }
    });
  }
};
